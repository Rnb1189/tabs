{"version":3,"sources":["webpack:///./node_modules/warning/browser.js","webpack:///./node_modules/lodash/isObject.js","webpack:///./node_modules/lodash/_root.js","webpack:///./examples/activeKey.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./src/TabBarTabsNode.js","webpack:///./src/ScrollableTabBarNode.js","webpack:///./src/ScrollableInkTabBar.js","webpack:///./node_modules/lodash/debounce.js","webpack:///./node_modules/lodash/now.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/toNumber.js","webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack:///./node_modules/rc-hammerjs/es/index.js","webpack:///./src/SwipeableTabContent.js","webpack:///./node_modules/rc-hammerjs/es/Hammer.js","webpack:///./node_modules/hammerjs/hammer.js","webpack:///./src/SwipeableInkTabBar.js","webpack:///./src/SwipeableTabBarNode.js","webpack:///./src/TabBarSwipeableTabs.js"],"names":["PanelContent","id","map","item","Demo","state","activeKey","start","rtl","onChange","console","log","setState","onTabClick","key","tick","handleNotExistKey","handleRtl","isRtl","margin","height","marginLeft","React","Component","ReactDOM","render","document","getElementById","TabBarTabsNode","props","children","panels","prefixCls","tabBarGutter","saveRef","tabBarPosition","renderTabBarNode","rst","Children","forEach","child","index","cls","events","disabled","onClick","bind","classnames","ref","gutter","length","style","isVertical","warning","node","tab","push","propTypes","PropTypes","string","number","func","defaultProps","ScrollableTabBarNode","prevTransitionEnd","e","propertyName","container","getRef","scrollToActiveTab","target","currentTarget","activeTab","navWrap","needToSroll","isNextPrevShown","lastNextPrevShown","activeTabWH","getScrollWH","navWrapNodeWH","getOffsetWH","offset","wrapOffset","getOffsetLT","activeTabOffset","setOffset","prev","onPrevClick","navWrapNode","next","onNextClick","componentDidUpdate","debouncedResize","debounce","setNextPrev","resizeObserver","ResizeObserver","observe","prevProps","nextPrev","disconnect","cancel","navNode","navTabsContainer","navNodeWH","containerWH","minOffset","realOffset","setNext","setPrev","prop","getBoundingClientRect","checkNextPrev","Math","min","navOffset","navStyle","transformSupported","isTransform3dSupported","value","name","setTransform","v","scrollAnimated","navWrapper","prevIcon","nextIcon","showNextPrev","prevButton","nextButton","navClassName","navClasses","isRequired","oneOf","bool","ele","ScrollableInkTabBar","restProps","RESISTANCE_COEF","computeIndex","maxIndex","startIndex","delta","viewSize","exp","getIndexByDelta","deltaY","deltaX","otherDelta","abs","undefined","currentIndex","showIndex","floor","SwipeableTabContent","onPanStart","animated","getActiveIndex","setTransition","rootNode","startDrag","toArray","offsetHeight","offsetWidth","onPan","call","getTransformByIndex","onPanEnd","end","onSwipe","swipe","finalIndex","ceil","floorIndex","getActiveKey","findDOMNode","hammerOptions","any","SwipeableInkTabBar","SwipeableTabBarNode","checkPaginationByKey","hasPrevPage","hasNextPage","nav","swipeNode","realNode","setCache","setSwipePositionByKey","pageSize","_isVertical","_viewSize","getStyle","_tabWidth","cache","vertical","totalAvaliableDelta","tabWidth","getIndexByKey","centerTabCount","i","getDeltaByKey","totalDelta","setSwipePosition","setPxStyle","speed","nowDelta","_nextDelta","checkPaginationByDelta","object","TabBarSwipeableTabs","_flexWidth","tabStyle","WebkitFlexBasis","flexBasis","refProps"],"mappings":"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AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtBA;AACA;;AAEA;;;;;;;;;ACHA,eAAe,mBAAO,CAAC,EAAY;AACnC,eAAe,mBAAO,CAAC,EAAY;;AAEnC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjEA,iBAAiB,mBAAO,CAAC,EAAe;AACxC,mBAAmB,mBAAO,CAAC,EAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5BA,aAAa,mBAAO,CAAC,EAAW;AAChC,gBAAgB,mBAAO,CAAC,EAAc;AACtC,qBAAqB,mBAAO,CAAC,EAAmB;;AAEhD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC3BA,aAAa,mBAAO,CAAC,EAAW;;AAEhC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,EAAE;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA,iCAAiC,YAAY;AAC7C,mDAAmD,gBAAgB;AACnE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gCAAgC,6BAA6B,EAAE,aAAa;AAC5G,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qDAAqD,mCAAmC,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,UAAU;AACrB,aAAa;AACb;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,6CAA6C,yBAAyB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,kCAAkC,iEAAiE;AACnG;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,8CAA8C;AAC9C,CAAC;AACD;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2CAA2C;AAC7E;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC;AACA,eAAe,yBAAyB;AACxC;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AA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AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,+BAA+B;AACxD,2BAA2B,+BAA+B;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA,CAAC,sEAAS;;AAEV;AACA,EAAE,4EAAe;;AAEjB,SAAS,uFAA0B;AACnC;;AAEA,CAAC,yEAAY;AACb;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,UAAU,6CAAK,cAAc,6CAAK;AAClC;AACA,EAAE;;AAEF;AACA,CAAC,CAAC,6CAAK;;AAEP;AACA;AACA,YAAY,kDAAS;AACrB;AACe,wEAAe,E;;;;;;;ACnK9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,UAAU;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM,OAAO,KAAK,EAAE,KAAK,EAAE,KAAK;AAC3C,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,MAAM,GAAG,KAAK,EAAE,KAAK;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO,KAAK;AACvB,WAAW,OAAO,KAAK;AACvB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,4BAA4B,8BAA8B;;AAE1D;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA,gBAAgB;;AAEhB;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA,kCAAkC,EAAE;;AAEpC;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gCAAgC,EAAE;;AAElC;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,WAAW;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C,2BAA2B,cAAc;AACzC,2BAA2B,gCAAgC;AAC3D,yBAAyB,gCAAgC;AACzD;AACA,yBAAyB,4BAA4B;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA,4BAA4B,gCAAgC;;AAE5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,mGAAmG,GAAG;AACtG;;AAEA,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","file":"examples/activeKey.js","sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/warning/browser.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isObject.js\n// module id = 14\n// module chunks = 0 1 2 3 4 5 6","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_root.js\n// module id = 15\n// module chunks = 0 1 2 3 4 5 6","/* eslint react/no-multi-comp:0, no-console:0, react/prop-types:0 */\r\nimport \"rnb-rc-tabs/assets/index.less\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Tabs, { TabPane } from \"rnb-rc-tabs\";\r\nimport TabContent from \"rnb-rc-tabs/lib/SwipeableTabContent\";\r\nimport ScrollableInkTabBar from \"rnb-rc-tabs/lib/ScrollableInkTabBar\";\r\nimport SwipeableInkTabBar from \"rnb-rc-tabs/lib/SwipeableInkTabBar\";\r\n\r\nconst PanelContent = ({ id }) => (\r\n  <div>\r\n    {[1, 2, 3, 4, 5, 6].map(item => (\r\n      <p key={item}>{id}</p>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nclass Demo extends React.Component {\r\n  state = {\r\n    activeKey: \"6\",\r\n    start: 0,\r\n    rtl: false\r\n  };\r\n\r\n  onChange = activeKey => {\r\n    console.log(`onChange ${activeKey}`);\r\n    this.setState({\r\n      activeKey\r\n    });\r\n  };\r\n\r\n  onTabClick = key => {\r\n    console.log(`onTabClick ${key}`);\r\n    if (key === this.state.activeKey) {\r\n      this.setState({\r\n        activeKey: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      start: this.state.start + 10\r\n    });\r\n  };\r\n\r\n  handleNotExistKey = () => {\r\n    this.setState({\r\n      activeKey: \"-1\"\r\n    });\r\n  };\r\n  handleRtl = () => {\r\n    this.setState(state => {\r\n      return { ...state, rtl: !state.rtl };\r\n    });\r\n  };\r\n  render() {\r\n    const start = 1;\r\n    // const start = this.state.start;\r\n    var isRtl = this.state.rtl;\r\n    return (\r\n      <div style={{ margin: 20, height: 800 }}>\r\n        <h1>Simple Tabs1</h1>\r\n        <Tabs\r\n          isRtl={isRtl}\r\n          tabBarPosition={\"right\"}\r\n          renderTabBar={() => (\r\n            // <SwipeableInkTabBar onTabClick={this.onTabClick} />\r\n            <ScrollableInkTabBar onTabClick={this.onTabClick} />\r\n          )}\r\n          renderTabContent={() => <TabContent animatedWithMargin />}\r\n          activeKey={this.state.activeKey}\r\n          onChange={this.onChange}\r\n        >\r\n          <TabPane tab={`tab ${start}`} key=\"1\">\r\n            <PanelContent id={start} />\r\n          </TabPane>\r\n          <TabPane tab={`امید عبد ${start + 1}`} key=\"2\">\r\n            <PanelContent id={start + 1} />\r\n          </TabPane>\r\n          <TabPane tab={`tab e ${start + 2}`} key=\"3\">\r\n            <PanelContent id={start + 2} />\r\n          </TabPane>\r\n          <TabPane tab={`tab ${start + 3}`} key=\"4\">\r\n            <PanelContent id={start + 3} />\r\n          </TabPane>\r\n          <TabPane tab={`tab ${start + 4}`} key=\"5\">\r\n            <PanelContent id={start + 4} />\r\n          </TabPane>\r\n          <TabPane tab={`tab ${start + 5}`} key=\"6\">\r\n            <PanelContent id={start + 5} />\r\n          </TabPane>\r\n        </Tabs>\r\n        <button onClick={this.tick}>rerender</button>\r\n        <button onClick={this.handleNotExistKey} style={{ marginLeft: 10 }}>\r\n          change to a non-existent activeKey\r\n        </button>\r\n        <button onClick={this.handleRtl} style={{ marginLeft: 10 }}>\r\n          {isRtl ? \"R t l\" : \"L t r\"}\r\n        </button>\r\n        <div>{this.state.activeKey}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<Demo />, document.getElementById(\"__react-content\"));\r\n\n\n\n// WEBPACK FOOTER //\n// ./examples/activeKey.js","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_Symbol.js\n// module id = 16\n// module chunks = 0 1 2 3 4 5 6","import React from \"react\";\r\nimport warning from \"warning\";\r\nimport PropTypes from \"prop-types\";\r\nimport { isVertical } from \"./utils\";\r\nimport classnames from \"classnames\";\r\n\r\nexport default class TabBarTabsNode extends React.Component {\r\n  render() {\r\n    const {\r\n      panels: children,\r\n      activeKey,\r\n      prefixCls,\r\n      tabBarGutter,\r\n      saveRef,\r\n      tabBarPosition,\r\n      renderTabBarNode\r\n    } = this.props;\r\n    const rst = [];\r\n\r\n    React.Children.forEach(children, (child, index) => {\r\n      if (!child) {\r\n        return;\r\n      }\r\n      const key = child.key;\r\n      let cls = activeKey === key ? `${prefixCls}-tab-active` : \"\";\r\n      cls += ` ${prefixCls}-tab`;\r\n      let events = {};\r\n      if (child.props.disabled) {\r\n        cls += ` ${prefixCls}-tab-disabled`;\r\n      } else {\r\n        events = {\r\n          onClick: this.props.onTabClick.bind(this, key)\r\n        };\r\n      }\r\n      //NEw:\r\n      cls = classnames(\r\n        {\r\n          \"a-rtl\": this.props.isRtl,\r\n          \"a-ltr\": !this.props.isRtl\r\n        },\r\n        cls\r\n      );\r\n\r\n      const ref = {};\r\n      if (activeKey === key) {\r\n        ref.ref = saveRef(\"activeTab\");\r\n      }\r\n\r\n      const gutter =\r\n        tabBarGutter && index === children.length - 1 ? 0 : tabBarGutter;\r\n      const style = {\r\n        [isVertical(tabBarPosition) ? \"marginBottom\" : \"marginRight\"]: gutter\r\n      };\r\n      warning(\r\n        \"tab\" in child.props,\r\n        \"There must be `tab` property on children of Tabs.\"\r\n      );\r\n\r\n      let node = (\r\n        <div\r\n          role=\"tab\"\r\n          aria-disabled={child.props.disabled ? \"true\" : \"false\"}\r\n          aria-selected={activeKey === key ? \"true\" : \"false\"}\r\n          {...events}\r\n          className={cls}\r\n          key={key}\r\n          style={style}\r\n          {...ref}\r\n        >\r\n          {child.props.tab}\r\n        </div>\r\n      );\r\n\r\n      if (renderTabBarNode) {\r\n        node = renderTabBarNode(node);\r\n      }\r\n\r\n      rst.push(node);\r\n    });\r\n\r\n    return <div ref={saveRef(\"navTabsContainer\")}>{rst}</div>;\r\n  }\r\n}\r\n\r\nTabBarTabsNode.propTypes = {\r\n  activeKey: PropTypes.string,\r\n  panels: PropTypes.node,\r\n  prefixCls: PropTypes.string,\r\n  tabBarGutter: PropTypes.number,\r\n  onTabClick: PropTypes.func,\r\n  saveRef: PropTypes.func,\r\n  renderTabBarNode: PropTypes.func,\r\n  tabBarPosition: PropTypes.string\r\n};\r\n\r\nTabBarTabsNode.defaultProps = {\r\n  panels: [],\r\n  prefixCls: [],\r\n  tabBarGutter: null,\r\n  onTabClick: () => {},\r\n  saveRef: () => {}\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/TabBarTabsNode.js","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport debounce from \"lodash/debounce\";\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\nimport { setTransform, isTransform3dSupported } from \"./utils\";\r\n\r\nexport default class ScrollableTabBarNode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.offset = 0;\r\n\r\n    this.state = {\r\n      next: false,\r\n      prev: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.componentDidUpdate();\r\n    this.debouncedResize = debounce(() => {\r\n      this.setNextPrev();\r\n      this.scrollToActiveTab();\r\n    }, 200);\r\n    this.resizeObserver = new ResizeObserver(this.debouncedResize);\r\n    this.resizeObserver.observe(this.props.getRef(\"container\"));\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const props = this.props;\r\n    if (prevProps && prevProps.tabBarPosition !== props.tabBarPosition) {\r\n      this.setOffset(0);\r\n      return;\r\n    }\r\n    const nextPrev = this.setNextPrev();\r\n    // wait next, prev show hide\r\n    /* eslint react/no-did-update-set-state:0 */\r\n    if (this.isNextPrevShown(this.state) !== this.isNextPrevShown(nextPrev)) {\r\n      this.setState({}, this.scrollToActiveTab);\r\n    } else if (!prevProps || props.activeKey !== prevProps.activeKey) {\r\n      // can not use props.activeKey\r\n      this.scrollToActiveTab();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.resizeObserver) {\r\n      this.resizeObserver.disconnect();\r\n    }\r\n    if (this.debouncedResize && this.debouncedResize.cancel) {\r\n      this.debouncedResize.cancel();\r\n    }\r\n  }\r\n\r\n  setNextPrev() {\r\n    const navNode = this.props.getRef(\"nav\");\r\n    const navTabsContainer = this.props.getRef(\"navTabsContainer\");\r\n    const navNodeWH = this.getScrollWH(navTabsContainer || navNode);\r\n    // Add 1px to fix `offsetWidth` with decimal in Chrome not correct handle\r\n    // https://github.com/ant-design/ant-design/issues/13423\r\n    const containerWH = this.getOffsetWH(this.props.getRef(\"container\")) + 1;\r\n    const navWrapNodeWH = this.getOffsetWH(this.props.getRef(\"navWrap\"));\r\n    let { offset } = this;\r\n    const minOffset = containerWH - navNodeWH;\r\n    let { next, prev } = this.state;\r\n    if (minOffset >= 0) {\r\n      next = false;\r\n      this.setOffset(0, false);\r\n      offset = 0;\r\n    } else if (minOffset < offset) {\r\n      next = true;\r\n    } else {\r\n      next = false;\r\n      // Fix https://github.com/ant-design/ant-design/issues/8861\r\n      // Test with container offset which is stable\r\n      // and set the offset of the nav wrap node\r\n      const realOffset = navWrapNodeWH - navNodeWH;\r\n      this.setOffset(realOffset, false);\r\n      offset = realOffset;\r\n    }\r\n\r\n    if (offset < 0) {\r\n      prev = true;\r\n    } else {\r\n      prev = false;\r\n    }\r\n\r\n    this.setNext(next);\r\n    this.setPrev(prev);\r\n    return {\r\n      next,\r\n      prev\r\n    };\r\n  }\r\n\r\n  getOffsetWH(node) {\r\n    const tabBarPosition = this.props.tabBarPosition;\r\n    let prop = \"offsetWidth\";\r\n    if (tabBarPosition === \"left\" || tabBarPosition === \"right\") {\r\n      prop = \"offsetHeight\";\r\n    }\r\n    return node[prop];\r\n  }\r\n\r\n  getScrollWH(node) {\r\n    const tabBarPosition = this.props.tabBarPosition;\r\n    let prop = \"scrollWidth\";\r\n    if (tabBarPosition === \"left\" || tabBarPosition === \"right\") {\r\n      prop = \"scrollHeight\";\r\n    }\r\n    return node[prop];\r\n  }\r\n\r\n  getOffsetLT(node) {\r\n    const tabBarPosition = this.props.tabBarPosition;\r\n    let prop = \"left\";\r\n    if (tabBarPosition === \"left\" || tabBarPosition === \"right\") {\r\n      prop = \"top\";\r\n    }\r\n    return node.getBoundingClientRect()[prop];\r\n  }\r\n\r\n  setOffset(offset, checkNextPrev = true) {\r\n    const target = Math.min(0, offset);\r\n    if (this.offset !== target) {\r\n      this.offset = target;\r\n      let navOffset = {};\r\n      const tabBarPosition = this.props.tabBarPosition;\r\n      const navStyle = this.props.getRef(\"nav\").style;\r\n      const transformSupported = isTransform3dSupported(navStyle);\r\n      if (tabBarPosition === \"left\" || tabBarPosition === \"right\") {\r\n        if (transformSupported) {\r\n          navOffset = {\r\n            value: `translate3d(0,${target}px,0)`\r\n          };\r\n        } else {\r\n          navOffset = {\r\n            name: \"top\",\r\n            value: `${target}px`\r\n          };\r\n        }\r\n      } else if (transformSupported) {\r\n        // navOffset = {\r\n        //   value: `translate3d(${target}px,0,0)`\r\n        // };\r\n        //NEw:\r\n        if (this.props.isRtl)\r\n          navOffset = {\r\n            value: `translate3d(${-target}px,0,0)`\r\n          };\r\n        else\r\n          navOffset = {\r\n            value: `translate3d(${target}px,0,0)`\r\n          };\r\n      } else {\r\n        // navOffset = {\r\n        //   name: \"left\",\r\n        //   value: `${target}px`\r\n        // };\r\n        // NEw:\r\n        if (this.props.isRtl)\r\n          navOffset = {\r\n            name: \"right\",\r\n            value: `${target}px`\r\n          };\r\n        else\r\n          navOffset = {\r\n            name: \"left\",\r\n            value: `${target}px`\r\n          };\r\n      }\r\n      if (transformSupported) {\r\n        setTransform(navStyle, navOffset.value);\r\n      } else {\r\n        navStyle[navOffset.name] = navOffset.value;\r\n      }\r\n      if (checkNextPrev) {\r\n        this.setNextPrev();\r\n      }\r\n    }\r\n  }\r\n\r\n  setPrev(v) {\r\n    if (this.state.prev !== v) {\r\n      this.setState({\r\n        prev: v\r\n      });\r\n    }\r\n  }\r\n\r\n  setNext(v) {\r\n    if (this.state.next !== v) {\r\n      this.setState({\r\n        next: v\r\n      });\r\n    }\r\n  }\r\n\r\n  isNextPrevShown(state) {\r\n    if (state) {\r\n      return state.next || state.prev;\r\n    }\r\n    return this.state.next || this.state.prev;\r\n  }\r\n\r\n  prevTransitionEnd = e => {\r\n    if (e.propertyName !== \"opacity\") {\r\n      return;\r\n    }\r\n    const container = this.props.getRef(\"container\");\r\n    this.scrollToActiveTab({\r\n      target: container,\r\n      currentTarget: container\r\n    });\r\n  };\r\n\r\n  scrollToActiveTab = e => {\r\n    const activeTab = this.props.getRef(\"activeTab\");\r\n    const navWrap = this.props.getRef(\"navWrap\");\r\n    if ((e && e.target !== e.currentTarget) || !activeTab) {\r\n      return;\r\n    }\r\n\r\n    // when not scrollable or enter scrollable first time, don't emit scrolling\r\n    const needToSroll = this.isNextPrevShown() && this.lastNextPrevShown;\r\n    this.lastNextPrevShown = this.isNextPrevShown();\r\n    if (!needToSroll) {\r\n      return;\r\n    }\r\n\r\n    const activeTabWH = this.getScrollWH(activeTab);\r\n    const navWrapNodeWH = this.getOffsetWH(navWrap);\r\n    let { offset } = this;\r\n    const wrapOffset = this.getOffsetLT(navWrap);\r\n    const activeTabOffset = this.getOffsetLT(activeTab);\r\n    if (wrapOffset > activeTabOffset) {\r\n      offset += wrapOffset - activeTabOffset;\r\n      this.setOffset(offset);\r\n    } else if (wrapOffset + navWrapNodeWH < activeTabOffset + activeTabWH) {\r\n      offset -= activeTabOffset + activeTabWH - (wrapOffset + navWrapNodeWH);\r\n      this.setOffset(offset);\r\n    }\r\n  };\r\n\r\n  prev = e => {\r\n    this.props.onPrevClick(e);\r\n    const navWrapNode = this.props.getRef(\"navWrap\");\r\n    const navWrapNodeWH = this.getOffsetWH(navWrapNode);\r\n    const { offset } = this;\r\n    this.setOffset(offset + navWrapNodeWH);\r\n  };\r\n\r\n  next = e => {\r\n    this.props.onNextClick(e);\r\n    const navWrapNode = this.props.getRef(\"navWrap\");\r\n    const navWrapNodeWH = this.getOffsetWH(navWrapNode);\r\n    const { offset } = this;\r\n    this.setOffset(offset - navWrapNodeWH);\r\n  };\r\n\r\n  render() {\r\n    const { next, prev } = this.state;\r\n    const {\r\n      prefixCls,\r\n      scrollAnimated,\r\n      navWrapper,\r\n      prevIcon,\r\n      nextIcon\r\n    } = this.props;\r\n    const showNextPrev = prev || next;\r\n\r\n    const prevButton = (\r\n      <span\r\n        onClick={prev ? this.prev : null}\r\n        unselectable=\"unselectable\"\r\n        className={classnames({\r\n          [`${prefixCls}-tab-prev`]: 1,\r\n          [`${prefixCls}-tab-btn-disabled`]: !prev,\r\n          [`${prefixCls}-tab-arrow-show`]: showNextPrev\r\n        })}\r\n        onTransitionEnd={this.prevTransitionEnd}\r\n      >\r\n        {prevIcon || <span className={`${prefixCls}-tab-prev-icon`} />}\r\n      </span>\r\n    );\r\n\r\n    const nextButton = (\r\n      <span\r\n        onClick={next ? this.next : null}\r\n        unselectable=\"unselectable\"\r\n        className={classnames({\r\n          [`${prefixCls}-tab-next`]: 1,\r\n          [`${prefixCls}-tab-btn-disabled`]: !next,\r\n          [`${prefixCls}-tab-arrow-show`]: showNextPrev\r\n        })}\r\n      >\r\n        {nextIcon || <span className={`${prefixCls}-tab-next-icon`} />}\r\n      </span>\r\n    );\r\n\r\n    const navClassName = `${prefixCls}-nav`;\r\n    const navClasses = classnames({\r\n      [navClassName]: true,\r\n      [scrollAnimated\r\n        ? `${navClassName}-animated`\r\n        : `${navClassName}-no-animated`]: true\r\n    });\r\n\r\n    return (\r\n      <div\r\n        className={classnames({\r\n          //NEw:\r\n          \"a-rtl\": this.props.isRtl,\r\n          \"a-ltr\": !this.props.isRtl,\r\n          [`${prefixCls}-nav-container`]: 1,\r\n          [`${prefixCls}-nav-container-scrolling`]: showNextPrev\r\n        })}\r\n        key=\"container\"\r\n        ref={this.props.saveRef(\"container\")}\r\n      >\r\n        {prevButton}\r\n        {nextButton}\r\n        <div\r\n          className={`${prefixCls}-nav-wrap`}\r\n          ref={this.props.saveRef(\"navWrap\")}\r\n        >\r\n          <div className={`${prefixCls}-nav-scroll`}>\r\n            <div className={navClasses} ref={this.props.saveRef(\"nav\")}>\r\n              {navWrapper(this.props.children)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nScrollableTabBarNode.propTypes = {\r\n  activeKey: PropTypes.string,\r\n  getRef: PropTypes.func.isRequired,\r\n  saveRef: PropTypes.func.isRequired,\r\n  tabBarPosition: PropTypes.oneOf([\"left\", \"right\", \"top\", \"bottom\"]),\r\n  prefixCls: PropTypes.string,\r\n  scrollAnimated: PropTypes.bool,\r\n  onPrevClick: PropTypes.func,\r\n  onNextClick: PropTypes.func,\r\n  navWrapper: PropTypes.func,\r\n  children: PropTypes.node,\r\n  prevIcon: PropTypes.node,\r\n  nextIcon: PropTypes.node\r\n};\r\n\r\nScrollableTabBarNode.defaultProps = {\r\n  tabBarPosition: \"left\",\r\n  prefixCls: \"\",\r\n  scrollAnimated: true,\r\n  onPrevClick: () => {},\r\n  onNextClick: () => {},\r\n  navWrapper: ele => ele\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ScrollableTabBarNode.js","/* eslint-disable react/prefer-stateless-function */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport InkTabBarNode from './InkTabBarNode';\r\nimport TabBarTabsNode from './TabBarTabsNode';\r\nimport TabBarRootNode from './TabBarRootNode';\r\nimport ScrollableTabBarNode from './ScrollableTabBarNode';\r\nimport SaveRef from './SaveRef';\r\n\r\nexport default class ScrollableInkTabBar extends React.Component {\r\n  render() {\r\n    const { children: renderTabBarNode, ...restProps } = this.props;\r\n\r\n    return (\r\n      <SaveRef>\r\n        {(saveRef, getRef) => (\r\n          <TabBarRootNode saveRef={saveRef} {...restProps}>\r\n            <ScrollableTabBarNode saveRef={saveRef} getRef={getRef} {...restProps}>\r\n              <TabBarTabsNode saveRef={saveRef} renderTabBarNode={renderTabBarNode} {...restProps} />\r\n              <InkTabBarNode saveRef={saveRef} getRef={getRef} {...restProps} />\r\n            </ScrollableTabBarNode>\r\n          </TabBarRootNode>\r\n        )}\r\n      </SaveRef>\r\n    );\r\n  }\r\n}\r\n\r\nScrollableInkTabBar.propTypes = {\r\n  children: PropTypes.func,\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ScrollableInkTabBar.js","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/debounce.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/now.js\n// module id = 22\n// module chunks = 0 1 2 3 4 5 6","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_freeGlobal.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/toNumber.js\n// module id = 24\n// module chunks = 0 1 2 3 4 5 6","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isSymbol.js\n// module id = 25\n// module chunks = 0 1 2 3 4 5 6","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseGetTag.js\n// module id = 26\n// module chunks = 0 1 2 3 4 5 6","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_getRawTag.js\n// module id = 27\n// module chunks = 0 1 2 3 4 5 6","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_objectToString.js\n// module id = 28\n// module chunks = 0 1 2 3 4 5 6","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isObjectLike.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\n// module id = 30\n// module chunks = 0 1 2 3 4 5 6","import Hammer from './Hammer';\n\nexport default Hammer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rc-hammerjs/es/index.js\n// module id = 47\n// module chunks = 0 2 7","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Hammer from 'rc-hammerjs';\r\nimport ReactDOM from 'react-dom';\r\nimport TabContent from './TabContent';\r\nimport {\r\n  isVertical,\r\n  getActiveIndex,\r\n  getTransformByIndex,\r\n  setTransform,\r\n  getActiveKey,\r\n  toArray,\r\n  setTransition,\r\n} from './utils';\r\n\r\nconst RESISTANCE_COEF = 0.6;\r\n\r\nfunction computeIndex({\r\n  maxIndex,\r\n  startIndex,\r\n  delta,\r\n  viewSize,\r\n}) {\r\n  let index = startIndex + -delta / viewSize;\r\n  if (index < 0) {\r\n    index = Math.exp(index * RESISTANCE_COEF) - 1;\r\n  } else if (index > maxIndex) {\r\n    index = maxIndex + 1 - Math.exp((maxIndex - index) * RESISTANCE_COEF);\r\n  }\r\n  return index;\r\n}\r\n\r\nfunction getIndexByDelta(e) {\r\n  const delta = isVertical(this.props.tabBarPosition) ? e.deltaY : e.deltaX;\r\n  const otherDelta = isVertical(this.props.tabBarPosition) ? e.deltaX : e.deltaY;\r\n  if (Math.abs(delta) < Math.abs(otherDelta)) {\r\n    return undefined;\r\n  }\r\n  const currentIndex = computeIndex({\r\n    maxIndex: this.maxIndex,\r\n    viewSize: this.viewSize,\r\n    startIndex: this.startIndex,\r\n    delta,\r\n  });\r\n  let showIndex = delta < 0 ? Math.floor(currentIndex + 1) : Math.floor(currentIndex);\r\n  if (showIndex < 0) {\r\n    showIndex = 0;\r\n  } else if (showIndex > this.maxIndex) {\r\n    showIndex = this.maxIndex;\r\n  }\r\n  if (this.children[showIndex].props.disabled) {\r\n    return undefined;\r\n  }\r\n  return currentIndex;\r\n}\r\n\r\nexport default class SwipeableTabContent extends React.Component {\r\n  componentDidMount() {\r\n    this.rootNode = ReactDOM.findDOMNode(this);\r\n  }\r\n\r\n  onPanStart = () => {\r\n    const { tabBarPosition, children, activeKey, animated } = this.props;\r\n    this.startIndex = getActiveIndex(children, activeKey);\r\n    const startIndex = this.startIndex;\r\n    if (startIndex === -1) {\r\n      return;\r\n    }\r\n    if (animated) {\r\n      setTransition(this.rootNode.style, 'none');\r\n    }\r\n    this.startDrag = true;\r\n    this.children = toArray(children);\r\n    this.maxIndex = this.children.length - 1;\r\n    this.viewSize = isVertical(tabBarPosition) ?\r\n      this.rootNode.offsetHeight :\r\n      this.rootNode.offsetWidth;\r\n  }\r\n\r\n  onPan = (e) => {\r\n    if (!this.startDrag) {\r\n      return;\r\n    }\r\n    const { tabBarPosition } = this.props;\r\n    const currentIndex = getIndexByDelta.call(this, e);\r\n    if (currentIndex !== undefined) {\r\n      setTransform(this.rootNode.style, getTransformByIndex(currentIndex, tabBarPosition));\r\n    }\r\n  }\r\n\r\n  onPanEnd = (e) => {\r\n    if (!this.startDrag) {\r\n      return;\r\n    }\r\n    this.end(e);\r\n  }\r\n\r\n  onSwipe = (e) => {\r\n    this.end(e, true);\r\n  }\r\n\r\n  end = (e, swipe) => {\r\n    const { tabBarPosition, animated } = this.props;\r\n    this.startDrag = false;\r\n    if (animated) {\r\n      setTransition(this.rootNode.style, '');\r\n    }\r\n    const currentIndex = getIndexByDelta.call(this, e);\r\n    let finalIndex = this.startIndex;\r\n    if (currentIndex !== undefined) {\r\n      if (currentIndex < 0) {\r\n        finalIndex = 0;\r\n      } else if (currentIndex > this.maxIndex) {\r\n        finalIndex = this.maxIndex;\r\n      } else if (swipe) {\r\n        const delta = isVertical(tabBarPosition) ? e.deltaY : e.deltaX;\r\n        finalIndex = delta < 0 ? Math.ceil(currentIndex) : Math.floor(currentIndex);\r\n      } else {\r\n        const floorIndex = Math.floor(currentIndex);\r\n        if (currentIndex - floorIndex > 0.6) {\r\n          finalIndex = floorIndex + 1;\r\n        } else {\r\n          finalIndex = floorIndex;\r\n        }\r\n      }\r\n    }\r\n    if (this.children[finalIndex].props.disabled) {\r\n      return;\r\n    }\r\n    if (this.startIndex === finalIndex) {\r\n      if (animated) {\r\n        setTransform(this.rootNode.style,\r\n          getTransformByIndex(finalIndex, this.props.tabBarPosition));\r\n      }\r\n    } else {\r\n      this.props.onChange(getActiveKey(this.props.children, finalIndex));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { tabBarPosition, hammerOptions, animated } = this.props;\r\n    let events = {\r\n      onSwipe: this.onSwipe,\r\n      onPanStart: this.onPanStart,\r\n    };\r\n    if (animated !== false) {\r\n      events = {\r\n        ...events,\r\n        onPan: this.onPan,\r\n        onPanEnd: this.onPanEnd,\r\n      };\r\n    }\r\n    return (\r\n      <Hammer\r\n        {...events}\r\n        direction={isVertical(tabBarPosition) ? 'DIRECTION_ALL' : 'DIRECTION_HORIZONTAL'}\r\n        options={hammerOptions}\r\n      >\r\n        <TabContent {...this.props}/>\r\n      </Hammer>\r\n    );\r\n  }\r\n}\r\n\r\nSwipeableTabContent.propTypes = {\r\n  tabBarPosition: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  children: PropTypes.node,\r\n  hammerOptions: PropTypes.any,\r\n  animated: PropTypes.bool,\r\n  activeKey: PropTypes.string,\r\n};\r\n\r\nSwipeableTabContent.defaultProps = {\r\n  animated: true,\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/SwipeableTabContent.js","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\n\n// https://github.com/hammerjs/hammer.js/issues/930\n// https://github.com/JedWatson/react-hammerjs/issues/14\n// require('hammerjs') when in a browser. This is safe because Hammer is only\n// invoked in componentDidMount, which is not executed on the server.\nvar Hammer = typeof window !== 'undefined' ? require('hammerjs') : undefined;\n\nvar privateProps = {\n\tchildren: true,\n\tdirection: true,\n\toptions: true,\n\trecognizeWith: true,\n\tvertical: true\n};\n\n/**\n * Hammer Component\n * ================\n */\n\nvar handlerToEvent = {\n\taction: 'tap press',\n\tonDoubleTap: 'doubletap',\n\tonPan: 'pan',\n\tonPanCancel: 'pancancel',\n\tonPanEnd: 'panend',\n\tonPanStart: 'panstart',\n\tonPinch: 'pinch',\n\tonPinchCancel: 'pinchcancel',\n\tonPinchEnd: 'pinchend',\n\tonPinchIn: 'pinchin',\n\tonPinchOut: 'pinchout',\n\tonPinchStart: 'pinchstart',\n\tonPress: 'press',\n\tonPressUp: 'pressup',\n\tonRotate: 'rotate',\n\tonRotateCancel: 'rotatecancel',\n\tonRotateEnd: 'rotateend',\n\tonRotateMove: 'rotatemove',\n\tonRotateStart: 'rotatestart',\n\tonSwipe: 'swipe',\n\tonSwipeRight: 'swiperight',\n\tonSwipeLeft: 'swipeleft',\n\tonSwipeUp: 'swipeup',\n\tonSwipeDown: 'swipedown',\n\tonTap: 'tap'\n};\n\nObject.keys(handlerToEvent).forEach(function (i) {\n\tprivateProps[i] = true;\n});\n\nfunction updateHammer(hammer, props) {\n\tvar _this = this;\n\n\tif (props.hasOwnProperty('vertical')) {\n\t\tconsole.warn('vertical is deprecated, please use `direction` instead');\n\t}\n\n\tvar directionProp = props.direction;\n\tif (directionProp || props.hasOwnProperty('vertical')) {\n\t\tvar direction = directionProp ? directionProp : props.vertical ? 'DIRECTION_ALL' : 'DIRECTION_HORIZONTAL';\n\t\thammer.get('pan').set({ direction: Hammer[direction] });\n\t\thammer.get('swipe').set({ direction: Hammer[direction] });\n\t}\n\n\tif (props.options) {\n\t\tObject.keys(props.options).forEach(function (option) {\n\t\t\tif (option === 'recognizers') {\n\t\t\t\tObject.keys(props.options.recognizers).forEach(function (gesture) {\n\t\t\t\t\tvar recognizer = hammer.get(gesture);\n\t\t\t\t\trecognizer.set(props.options.recognizers[gesture]);\n\t\t\t\t\tif (props.options.recognizers[gesture].requireFailure) {\n\t\t\t\t\t\trecognizer.requireFailure(props.options.recognizers[gesture].requireFailure);\n\t\t\t\t\t}\n\t\t\t\t}, _this);\n\t\t\t} else {\n\t\t\t\tvar key = option;\n\t\t\t\tvar optionObj = {};\n\t\t\t\toptionObj[key] = props.options[option];\n\t\t\t\thammer.set(optionObj);\n\t\t\t}\n\t\t}, this);\n\t}\n\n\tif (props.recognizeWith) {\n\t\tObject.keys(props.recognizeWith).forEach(function (gesture) {\n\t\t\tvar recognizer = hammer.get(gesture);\n\t\t\trecognizer.recognizeWith(props.recognizeWith[gesture]);\n\t\t}, this);\n\t}\n\n\tObject.keys(props).forEach(function (p) {\n\t\tvar e = handlerToEvent[p];\n\t\tif (e) {\n\t\t\thammer.off(e);\n\t\t\thammer.on(e, props[p]);\n\t\t}\n\t});\n}\n\nvar HammerComponent = function (_React$Component) {\n\t_inherits(HammerComponent, _React$Component);\n\n\tfunction HammerComponent() {\n\t\t_classCallCheck(this, HammerComponent);\n\n\t\treturn _possibleConstructorReturn(this, (HammerComponent.__proto__ || Object.getPrototypeOf(HammerComponent)).apply(this, arguments));\n\t}\n\n\t_createClass(HammerComponent, [{\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tthis.hammer = new Hammer(ReactDOM.findDOMNode(this));\n\t\t\tupdateHammer(this.hammer, this.props);\n\t\t}\n\t}, {\n\t\tkey: 'componentDidUpdate',\n\t\tvalue: function componentDidUpdate() {\n\t\t\tif (this.hammer) {\n\t\t\t\tupdateHammer(this.hammer, this.props);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentWillUnmount',\n\t\tvalue: function componentWillUnmount() {\n\t\t\tif (this.hammer) {\n\t\t\t\tthis.hammer.stop();\n\t\t\t\tthis.hammer.destroy();\n\t\t\t}\n\t\t\tthis.hammer = null;\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar props = {};\n\n\t\t\tObject.keys(this.props).forEach(function (i) {\n\t\t\t\tif (!privateProps[i]) {\n\t\t\t\t\tprops[i] = this.props[i];\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\t// Reuse the child provided\n\t\t\t// This makes it flexible to use whatever element is wanted (div, ul, etc)\n\t\t\treturn React.cloneElement(React.Children.only(this.props.children), props);\n\t\t}\n\t}]);\n\n\treturn HammerComponent;\n}(React.Component);\n\nHammerComponent.displayName = 'Hammer';\nHammerComponent.propTypes = {\n\tclassName: PropTypes.string\n};\nexport default HammerComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rc-hammerjs/es/Hammer.js\n// module id = 62\n// module chunks = 0 2 7","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hammerjs/hammer.js\n// module id = 63\n// module chunks = 0 2 7","/* eslint-disable react/prefer-stateless-function */\r\nimport React from 'react';\r\nimport SwipeableTabBarNode from './SwipeableTabBarNode';\r\nimport TabBarSwipeableTabs from './TabBarSwipeableTabs';\r\nimport TabBarRootNode from './TabBarRootNode';\r\nimport InkTabBarNode from './InkTabBarNode';\r\nimport SaveRef from './SaveRef';\r\n\r\nexport default class SwipeableInkTabBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <SaveRef>\r\n        {(saveRef, getRef) => (\r\n          <TabBarRootNode saveRef={saveRef} {...this.props}>\r\n            <SwipeableTabBarNode saveRef={saveRef} getRef={getRef} {...this.props}>\r\n              <TabBarSwipeableTabs saveRef={saveRef} {...this.props} />\r\n              <InkTabBarNode saveRef={saveRef} getRef={getRef} {...this.props} />\r\n            </SwipeableTabBarNode>\r\n          </TabBarRootNode>\r\n        )}\r\n      </SaveRef>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/SwipeableInkTabBar.js","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport Hammer from 'rc-hammerjs';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  isVertical,\r\n  getStyle,\r\n  setPxStyle,\r\n} from './utils';\r\n\r\nexport default class SwipeableTabBarNode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { hasPrevPage, hasNextPage } = this.checkPaginationByKey(this.props.activeKey);\r\n    this.state = {\r\n      hasPrevPage,\r\n      hasNextPage,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const swipe = this.props.getRef('swipe');\r\n    const nav = this.props.getRef('nav');\r\n    const { activeKey } = this.props;\r\n    this.swipeNode = ReactDOM.findDOMNode(swipe); // dom which scroll (9999px)\r\n    this.realNode = ReactDOM.findDOMNode(nav); // dom which visiable in screen (viewport)\r\n    this.setCache();\r\n    this.setSwipePositionByKey(activeKey);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    this.setCache();\r\n    if ((this.props.activeKey && this.props.activeKey !== prevProps.activeKey)\r\n      || this.props.panels.length !== prevProps.panels.length\r\n      || this.props.pageSize !== prevProps.pageSize\r\n    ) {\r\n      this.setSwipePositionByKey(this.props.activeKey);\r\n    }\r\n  }\r\n\r\n  onPan = (e) => {\r\n    const { vertical, totalAvaliableDelta, totalDelta } = this.cache;\r\n    const { speed } = this.props;\r\n    // calculate touch distance\r\n    let nowDelta = vertical ? e.deltaY : e.deltaX;\r\n    nowDelta *= (speed / 10);\r\n\r\n    // calculate distance dom need transform\r\n    let _nextDelta = nowDelta + totalDelta;\r\n    if (_nextDelta >= 0) {\r\n      _nextDelta = 0;\r\n    } else if (_nextDelta <= -totalAvaliableDelta) {\r\n      _nextDelta = -totalAvaliableDelta;\r\n    }\r\n\r\n    this.cache.totalDelta = _nextDelta;\r\n    this.setSwipePosition();\r\n\r\n    // calculate pagination display\r\n    const { hasPrevPage, hasNextPage } = this.checkPaginationByDelta(this.cache.totalDelta);\r\n    if (hasPrevPage !== this.state.hasPrevPage || hasNextPage !== this.state.hasNextPage) {\r\n      this.setState({\r\n        hasPrevPage,\r\n        hasNextPage,\r\n      });\r\n    }\r\n  }\r\n\r\n  setCache() {\r\n    const { tabBarPosition, pageSize, panels } = this.props;\r\n    const _isVertical = isVertical(tabBarPosition);\r\n    const _viewSize = getStyle(this.realNode, _isVertical ? 'height' : 'width');\r\n    const _tabWidth = _viewSize / pageSize;\r\n    this.cache = {\r\n      ...this.cache,\r\n      vertical: _isVertical,\r\n      totalAvaliableDelta: _tabWidth * panels.length - _viewSize,\r\n      tabWidth: _tabWidth,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * used for props.activeKey setting, not for swipe callback\r\n   */\r\n  getDeltaByKey(activeKey) {\r\n    const { pageSize } = this.props;\r\n    const index = this.getIndexByKey(activeKey);\r\n    const centerTabCount = Math.floor(pageSize / 2);\r\n    const { tabWidth } = this.cache;\r\n    const delta = (index - centerTabCount) * tabWidth * -1;\r\n    return delta;\r\n  }\r\n\r\n  getIndexByKey(activeKey) {\r\n    const { panels } = this.props;\r\n    const length = panels.length;\r\n    for (let i = 0; i < length; i++) {\r\n      if (panels[i].key === activeKey) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  setSwipePositionByKey(activeKey) {\r\n    const { hasPrevPage, hasNextPage } = this.checkPaginationByKey(activeKey);\r\n    const { totalAvaliableDelta } = this.cache;\r\n    this.setState({\r\n      hasPrevPage,\r\n      hasNextPage,\r\n    });\r\n    let delta;\r\n    if (!hasPrevPage) {\r\n      // the first page\r\n      delta = 0;\r\n    } else if (!hasNextPage) {\r\n      // the last page\r\n      delta = -totalAvaliableDelta;\r\n    } else if (hasNextPage) {\r\n      // the middle page\r\n      delta = this.getDeltaByKey(activeKey);\r\n    }\r\n    this.cache.totalDelta = delta;\r\n    this.setSwipePosition();\r\n  }\r\n\r\n  setSwipePosition() {\r\n    const { totalDelta, vertical } = this.cache;\r\n    setPxStyle(this.swipeNode, totalDelta, vertical);\r\n  }\r\n\r\n  checkPaginationByKey(activeKey) {\r\n    const { panels, pageSize } = this.props;\r\n    const index = this.getIndexByKey(activeKey);\r\n    const centerTabCount = Math.floor(pageSize / 2);\r\n    // the basic rule is to make activeTab be shown in the center of TabBar viewport\r\n    return {\r\n      hasPrevPage: index - centerTabCount > 0,\r\n      hasNextPage: index + centerTabCount < panels.length,\r\n    };\r\n  }\r\n\r\n  checkPaginationByDelta(delta) {\r\n    const { totalAvaliableDelta } = this.cache;\r\n    return {\r\n      hasPrevPage: delta < 0,\r\n      hasNextPage: -delta < totalAvaliableDelta,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { prefixCls, hammerOptions, tabBarPosition } = this.props;\r\n    const { hasPrevPage, hasNextPage } = this.state;\r\n    const navClassName = `${prefixCls}-nav`;\r\n    const navClasses = classnames({\r\n      [navClassName]: true,\r\n    });\r\n    const events = {\r\n      onPan: this.onPan,\r\n    };\r\n    return (\r\n      <div\r\n        className={classnames({\r\n          [`${prefixCls}-nav-container`]: 1,\r\n          [`${prefixCls}-nav-swipe-container`]: 1,\r\n          // page classname can be used to render special style when there has a prev/next page\r\n          [`${prefixCls}-prevpage`]: hasPrevPage,\r\n          [`${prefixCls}-nextpage`]: hasNextPage,\r\n        })}\r\n        key=\"container\"\r\n        ref={this.props.saveRef('container')}\r\n      >\r\n        <div className={`${prefixCls}-nav-wrap`} ref={this.props.saveRef('navWrap')}>\r\n          <Hammer\r\n            {...events}\r\n            direction={isVertical(tabBarPosition) ? 'DIRECTION_ALL' : 'DIRECTION_HORIZONTAL'}\r\n            options={hammerOptions}\r\n          >\r\n            <div className={`${prefixCls}-nav-swipe`} ref={this.props.saveRef('swipe')}>\r\n              <div className={navClasses} ref={this.props.saveRef('nav')}>\r\n                {this.props.children}\r\n              </div>\r\n            </div>\r\n          </Hammer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSwipeableTabBarNode.propTypes = {\r\n  activeKey: PropTypes.string,\r\n  panels: PropTypes.node,\r\n  pageSize: PropTypes.number,\r\n  tabBarPosition: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\r\n  prefixCls: PropTypes.string,\r\n  children: PropTypes.node,\r\n  hammerOptions: PropTypes.object,\r\n  speed: PropTypes.number,\r\n  saveRef: PropTypes.func,\r\n  getRef: PropTypes.func,\r\n};\r\n\r\nSwipeableTabBarNode.defaultProps = {\r\n  panels: null,\r\n  tabBarPosition: 'top',\r\n  prefixCls: '',\r\n  children: null,\r\n  hammerOptions: {},\r\n  pageSize: 5, // per page show how many tabs\r\n  speed: 7, // swipe speed, 1 to 10, more bigger more faster\r\n  saveRef: () => {},\r\n  getRef: () => {},\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/SwipeableTabBarNode.js","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nexport default class TabBarSwipeableTabs extends React.Component {\r\n  render() {\r\n    const props = this.props;\r\n    const children = props.panels;\r\n    const activeKey = props.activeKey;\r\n    const rst = [];\r\n    const prefixCls = props.prefixCls;\r\n\r\n    const _flexWidth = `${(1 / props.pageSize) * 100}%`;\r\n    const tabStyle = {\r\n      WebkitFlexBasis: _flexWidth,\r\n      flexBasis: _flexWidth\r\n    };\r\n\r\n    React.Children.forEach(children, child => {\r\n      if (!child) {\r\n        return;\r\n      }\r\n      const key = child.key;\r\n      const cls = classnames(`${prefixCls}-tab`, {\r\n        //NEw:\r\n        \"a-rtl\": this.props.isRtl,\r\n        \"a-ltr\": !this.props.isRtl,\r\n        [`${prefixCls}-tab-active`]: activeKey === key,\r\n        [`${prefixCls}-tab-disabled`]: child.props.disabled\r\n      });\r\n      let events = {};\r\n      if (!child.props.disabled) {\r\n        events = {\r\n          onClick: this.props.onTabClick.bind(this, key)\r\n        };\r\n      }\r\n      const refProps = {};\r\n      if (activeKey === key) {\r\n        refProps.ref = this.props.saveRef(\"activeTab\");\r\n      }\r\n      rst.push(\r\n        <div\r\n          role=\"tab\"\r\n          style={tabStyle}\r\n          aria-disabled={child.props.disabled ? \"true\" : \"false\"}\r\n          aria-selected={activeKey === key ? \"true\" : \"false\"}\r\n          {...events}\r\n          className={cls}\r\n          key={key}\r\n          {...refProps}\r\n        >\r\n          {child.props.tab}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return rst;\r\n  }\r\n}\r\n\r\nTabBarSwipeableTabs.propTypes = {\r\n  pageSize: PropTypes.number,\r\n  onTabClick: PropTypes.func,\r\n  saveRef: PropTypes.func\r\n};\r\n\r\nTabBarSwipeableTabs.defaultProps = {\r\n  pageSize: 5,\r\n  onTabClick: () => {},\r\n  saveRef: () => {}\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/TabBarSwipeableTabs.js"],"sourceRoot":""}